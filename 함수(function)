함수란??
-함수란 일련의 처리를 하나로 모아 언제든 호출할 수  있도록 만들어 둔 것 
-함수는 입력 값을 받아 출력값으로 반환 하는데,
 입력 값을 인수라고 하고 출력 값을 반환값이라고 부 른다.

함수는 function 키워드를 사용해서 정의한다.
ex)
function square(x){
 return x * x;
}


console.log(square(5));



함수의 기초 
함수를 호출하기 위해서는 함수 이름 뒤 소괄호에
인수를 묶어 입력함

function sumFunction(parameter){
   return parameter * parameter
};

sumFunction(5);  인수
함수를 호출할 때 전달하는 값을 인수(argument)
함수 정의문의 인수를 인자(parameter)라고 부른다.

함수의 일반적인 실행 흐름 
- 호출한 코드에 있는 인수가 함수 정의문의 인자에
  대입된다.
-함수 정의문의 중괄호 안에 작성된 프로그램이 순차적 으로 대입된다.
-return 문이 실행되면 호출한 코드로 돌아간다. return  
 문의 값은 함수의 반환값이 된다.
-return 문이 실행되지 않은 상태로 마지막 문장이 실  행되면, 호출한 코드로 돌아간 후에 undefined가 함수 의 반환값이 된다.

자바스크립트에서 함수 또한 객체이다. 함수 선언문으로 함수를 선언하면 내부적으로는 그 함수 이름을 변수 이름으로 한 변수와 함수 객체가 만들어지고, 그 변수에 함수 객체의 참조가 저장된다.

function square(x){
 return x * x
}

var square = function() {
	return x * x;
};

console.log(square(5));

함수를 다른 변수에 할당하면 그 변수 이름으로 
함수를 실행할 수도 있다.

function square(x){
 return x * x;
}
var sq2 = square;
console.log(sq2(5));

변수에 접근할 수 있는 범위를 그 변수의 유효 범위(scope)라고 한다.
자바스크립트 변수의 유효 범위는 두 가지로 나뉜다.
전역 변수:함수 바깥에서 선언된 변수로 유효 범위가 
	 전체 프로그램이다.
지역 변수:함수 안에서 선언된 변수와 함수 인자로 유효
             범위는 변수가 선언된 함수 내부이다.

변수를 선언하지 않은 상태에서 값을 대입하면 전역 변수로 선언된다. 이 현상은 함수안에서도 마찬가지

